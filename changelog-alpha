//==================================================================================================
//                                   ______           _    _       
//                                  |  ____|         | |  (_)      
//                                  | |__   _ __ __ _| | ___ _ __  
//                                  |  __| | '__/ _` | |/ / | '_ \ 
//                                  | |____| | | (_| |   <| | | | |
//                                  |______|_|  \__,_|_|\_\_|_| |_|
//
//== Descrição =====================================================================================
// Registro de Mudanças
//== Formatação ====================================================================================
// {DATA} - (VERSÃO)
// {DESCRIÇÃO}
//== Manual ========================================================================================
// DATA: Dia em que foi feito a mudança no seguinte formato: {DIA}.{MÊS}.{ANO}
//
// VERSÃO: Número da versão respectiva a mudança feita: {SEASON}.{EPISÓDIO}.{PATCH}.{REVISÃO}
//			- SEASON: número da temporada em que o projeto está (anual).
//			- EPISÓDIO: grande conjunto de mudanças contendo várias novidades (mensal).
//			- PATCH: pequeno conjunto de mudanças completas pré-planejadas (semanal).
//			- REVISÃO: quantidade de modificações feitas no projeto (revisão SVN).
//
// DESCRIÇÃO: Deve conter todas as informações respectivas as mudanças ocorridas na revisão.
//				Acompanhando o seguinte formato: {INDENTAÇÃO}- {MENSAGEM}
//			- INDENTAÇÃO: Deve ser feito através de espaços largos (tabs).
//			- MENSAGEM: Breve parágrafo para explicar as alterações feitas.
//==================================================================================================

15.10.2016 - 0.0.1.9
- Implementação de ModelRender, TerrainRender e WorldRender para tornar recursos renderizáveis mais dinâmicos.
	- Desta forma é possível criar classes que possam ser renderizadas de outras formas (raw/injeção direta).
- Corrigido problema onde modos de leitura não eram adicionados, ModelReaderFactory, TextureReaderFactory e WorldReaderFactory.

14.10.2016 - 0.0.1.8
- Corrigido o nome dos pacotes que deveriam ser com.erakin.api e não org.erakin.api.
- Todos os arquivos relacionados a dados de texture foram movidos para api.resources.texture.
	- Separado os formatos de textures (BMP, JPG e PNG) para textures.{file_extension}.
		- Será necessário utilizar TextureManager para especificar quais extensões serão permitidas.
- Todos os arquivos relacionados a dados de modelagens foram movidos para api.resources.model.
	- Separado os formatos de model (MDL e OBJ) para models.{file_extension}.
		- Será necessário utilizar ModelManager para especificar quais extensões serão permitidas.
- Todos os arquivos relacionados a dados de mundos e terrenos foram movidos para api.resources.world.
	- Separado os formatos de mundos (WDS e XML) para models.{file_extension}.
		- Será necessário utilizar WorldManager para especificar quais extensões serão permitidas.

14.10.2016 - 0.0.1.7
- Adicionado novo projeto denominado API, para que seja possível criar aplicações em LWJGL como ferramentas.
	- Alguns arquivos (buffer, input e outros) já foram movidos para a API, já que serão úteis.
	- Boa parte do código da Engine (atual) deve ir para a API e outro projeto Tools deve ser criado.
- Removido atributos de terrainWidth e terrainLength, será considerado terrainDimension, world.
- Será permitido mundos que tenham um terreno de tamanho 1x1 para adicionar possíveis exceções.
	- Acredito que mais a frente será reformulado o modo como é feito o load dos mundos.

21.06.2017 - 0.0.0.6
- Adicionando commandName para que DrawElement possa ser identificado mais facilmente.
	- Agora DrawElement pode ser identificado (parse) por um nome ou código.

16.06.2017 - 0.0.0.5
- PreferencesDefault atualizado para considerar JIni na leitura dos arquivos de configurações das preferências.

16.06.2017 - 0.0.0.4
- ProjectionMatrix não estava sendo atualizado, adicionado o chamado na Engine antes do update dos renderizadores.
- Documentação dos métodos de todos os métodos necessários para a implementação do Input.
- Pequenos ajustes em VirtualKeyboard.start() e considerando SERVICE_RUNNING em alguns métodos.
- Atualizando ProjectionMatrix para que update() só tenha efeito se updated for false.

16.04.2017 - 0.0.0.3
- Convertendo a codificação de charset dos arquivos changelogs para UTF-8.

16.04.2017 - 0.0.0.2
- Subindo versão inicial do projeto:
	- Gerenciamento de texturas, modelagens e shaders.
	- Sistema para detecção das ações realizadas no teclado.
	- Base do sistema (core) para inicialização da Engine.
	- Estrutura básica inicial para construir o mundo.

15.04.2017 - 0.0.0.1
- Initial commit